// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package common

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_992c40b2d12de553, []int{0}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type PublicKey struct {
	Content              string   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublicKey) Reset()         { *m = PublicKey{} }
func (m *PublicKey) String() string { return proto.CompactTextString(m) }
func (*PublicKey) ProtoMessage()    {}
func (*PublicKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_992c40b2d12de553, []int{1}
}
func (m *PublicKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicKey.Unmarshal(m, b)
}
func (m *PublicKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicKey.Marshal(b, m, deterministic)
}
func (dst *PublicKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicKey.Merge(dst, src)
}
func (m *PublicKey) XXX_Size() int {
	return xxx_messageInfo_PublicKey.Size(m)
}
func (m *PublicKey) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicKey.DiscardUnknown(m)
}

var xxx_messageInfo_PublicKey proto.InternalMessageInfo

func (m *PublicKey) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type OutgoingMessage struct {
	Receiver             string   `protobuf:"bytes,1,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Content              string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OutgoingMessage) Reset()         { *m = OutgoingMessage{} }
func (m *OutgoingMessage) String() string { return proto.CompactTextString(m) }
func (*OutgoingMessage) ProtoMessage()    {}
func (*OutgoingMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_992c40b2d12de553, []int{2}
}
func (m *OutgoingMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutgoingMessage.Unmarshal(m, b)
}
func (m *OutgoingMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutgoingMessage.Marshal(b, m, deterministic)
}
func (dst *OutgoingMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutgoingMessage.Merge(dst, src)
}
func (m *OutgoingMessage) XXX_Size() int {
	return xxx_messageInfo_OutgoingMessage.Size(m)
}
func (m *OutgoingMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_OutgoingMessage.DiscardUnknown(m)
}

var xxx_messageInfo_OutgoingMessage proto.InternalMessageInfo

func (m *OutgoingMessage) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

func (m *OutgoingMessage) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type IncomingMessage struct {
	Sender               string   `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Content              string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IncomingMessage) Reset()         { *m = IncomingMessage{} }
func (m *IncomingMessage) String() string { return proto.CompactTextString(m) }
func (*IncomingMessage) ProtoMessage()    {}
func (*IncomingMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_992c40b2d12de553, []int{3}
}
func (m *IncomingMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IncomingMessage.Unmarshal(m, b)
}
func (m *IncomingMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IncomingMessage.Marshal(b, m, deterministic)
}
func (dst *IncomingMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IncomingMessage.Merge(dst, src)
}
func (m *IncomingMessage) XXX_Size() int {
	return xxx_messageInfo_IncomingMessage.Size(m)
}
func (m *IncomingMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_IncomingMessage.DiscardUnknown(m)
}

var xxx_messageInfo_IncomingMessage proto.InternalMessageInfo

func (m *IncomingMessage) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *IncomingMessage) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "Empty")
	proto.RegisterType((*PublicKey)(nil), "PublicKey")
	proto.RegisterType((*OutgoingMessage)(nil), "OutgoingMessage")
	proto.RegisterType((*IncomingMessage)(nil), "IncomingMessage")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MessengerClient is the client API for Messenger service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MessengerClient interface {
	SetPublicKey(ctx context.Context, in *PublicKey, opts ...grpc.CallOption) (*Empty, error)
	SendMessage(ctx context.Context, in *OutgoingMessage, opts ...grpc.CallOption) (*Empty, error)
	ReceiveMessages(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Messenger_ReceiveMessagesClient, error)
}

type messengerClient struct {
	cc *grpc.ClientConn
}

func NewMessengerClient(cc *grpc.ClientConn) MessengerClient {
	return &messengerClient{cc}
}

func (c *messengerClient) SetPublicKey(ctx context.Context, in *PublicKey, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/Messenger/SetPublicKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messengerClient) SendMessage(ctx context.Context, in *OutgoingMessage, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/Messenger/SendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messengerClient) ReceiveMessages(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Messenger_ReceiveMessagesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Messenger_serviceDesc.Streams[0], "/Messenger/ReceiveMessages", opts...)
	if err != nil {
		return nil, err
	}
	x := &messengerReceiveMessagesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Messenger_ReceiveMessagesClient interface {
	Recv() (*IncomingMessage, error)
	grpc.ClientStream
}

type messengerReceiveMessagesClient struct {
	grpc.ClientStream
}

func (x *messengerReceiveMessagesClient) Recv() (*IncomingMessage, error) {
	m := new(IncomingMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MessengerServer is the server API for Messenger service.
type MessengerServer interface {
	SetPublicKey(context.Context, *PublicKey) (*Empty, error)
	SendMessage(context.Context, *OutgoingMessage) (*Empty, error)
	ReceiveMessages(*Empty, Messenger_ReceiveMessagesServer) error
}

func RegisterMessengerServer(s *grpc.Server, srv MessengerServer) {
	s.RegisterService(&_Messenger_serviceDesc, srv)
}

func _Messenger_SetPublicKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublicKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessengerServer).SetPublicKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Messenger/SetPublicKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessengerServer).SetPublicKey(ctx, req.(*PublicKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messenger_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OutgoingMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessengerServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Messenger/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessengerServer).SendMessage(ctx, req.(*OutgoingMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messenger_ReceiveMessages_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MessengerServer).ReceiveMessages(m, &messengerReceiveMessagesServer{stream})
}

type Messenger_ReceiveMessagesServer interface {
	Send(*IncomingMessage) error
	grpc.ServerStream
}

type messengerReceiveMessagesServer struct {
	grpc.ServerStream
}

func (x *messengerReceiveMessagesServer) Send(m *IncomingMessage) error {
	return x.ServerStream.SendMsg(m)
}

var _Messenger_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Messenger",
	HandlerType: (*MessengerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetPublicKey",
			Handler:    _Messenger_SetPublicKey_Handler,
		},
		{
			MethodName: "SendMessage",
			Handler:    _Messenger_SendMessage_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ReceiveMessages",
			Handler:       _Messenger_ReceiveMessages_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "common.proto",
}

func init() { proto.RegisterFile("common.proto", fileDescriptor_common_992c40b2d12de553) }

var fileDescriptor_common_992c40b2d12de553 = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0xce, 0xcf, 0xcd,
	0xcd, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x62, 0xe7, 0x62, 0x75, 0xcd, 0x2d, 0x28,
	0xa9, 0x54, 0x52, 0xe5, 0xe2, 0x0c, 0x28, 0x4d, 0xca, 0xc9, 0x4c, 0xf6, 0x4e, 0xad, 0x14, 0x92,
	0xe0, 0x62, 0x4f, 0xce, 0xcf, 0x2b, 0x49, 0xcd, 0x2b, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c,
	0x82, 0x71, 0x95, 0xdc, 0xb9, 0xf8, 0xfd, 0x4b, 0x4b, 0xd2, 0xf3, 0x33, 0xf3, 0xd2, 0x7d, 0x53,
	0x8b, 0x8b, 0x13, 0xd3, 0x53, 0x85, 0xa4, 0xb8, 0x38, 0x8a, 0x52, 0x93, 0x53, 0x33, 0xcb, 0x52,
	0x8b, 0xa0, 0xaa, 0xe1, 0x7c, 0x64, 0x83, 0x98, 0x50, 0x0d, 0x72, 0xe6, 0xe2, 0xf7, 0xcc, 0x4b,
	0xce, 0xcf, 0x45, 0x32, 0x48, 0x8c, 0x8b, 0xad, 0x38, 0x35, 0x2f, 0x05, 0x6e, 0x0c, 0x94, 0x87,
	0xdb, 0x10, 0xa3, 0x76, 0x46, 0x2e, 0x4e, 0x90, 0xee, 0xd4, 0xbc, 0xf4, 0xd4, 0x22, 0x21, 0x25,
	0x2e, 0x9e, 0xe0, 0xd4, 0x12, 0x84, 0x2f, 0xb8, 0xf4, 0xe0, 0x6c, 0x29, 0x36, 0x3d, 0xb0, 0x37,
	0x85, 0xd4, 0xb9, 0xb8, 0x83, 0x53, 0xf3, 0x52, 0x60, 0x56, 0x0a, 0xe8, 0xa1, 0xf9, 0x06, 0xae,
	0x50, 0x97, 0x8b, 0x3f, 0x08, 0xe2, 0x0b, 0xa8, 0x4c, 0xb1, 0x10, 0x54, 0x4a, 0x4a, 0x40, 0x0f,
	0xcd, 0xe5, 0x06, 0x8c, 0x49, 0x6c, 0xe0, 0xe0, 0x34, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x2a,
	0x91, 0x5f, 0x6f, 0x5e, 0x01, 0x00, 0x00,
}
